{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "String",
      "metadata": {
        "description": "Admin username"
      }
    },
    "adminPassword": {
      "type": "SecureString",
      "metadata": {
        "description": "Admin password"
      }
    },
    "ipv6mgmtvmName": {
      "type": "string",
      "minLength": 1
    },
    "ipv6mgmtvmWindowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2012-R2-Datacenter"
      ]
    }
  },
  "variables": {
    "vmNamePrefix": "myIPv6VM",
    "nicNamePrefix": "IPv6Nic",
    "storageAccountName": "[concat(uniqueString(resourceGroup().id), 'vhds')]",
    "dnsNameforIPv6": "[concat(variables('lbName'),uniqueString(resourceGroup().id))]",
    "availabilitySetName": "myIPv6AvSet",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "myIPv4Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "vnetName": "myIPv4VNet",
    "ipv4PrivateIPAddressType": "Dynamic",
    "ipv6PrivateIPAddressType": "Dynamic",
    "numberOfInstances": 2,
    "ipv6PublicIPAddressName": "myIPv6PublicIP",
    "ipv4PublicIPAddressName": "myIPv4PublicIP",
    "ipv4PublicIPAddressType": "Dynamic",
    "ipv6PublicIPAddressType": "Dynamic",
    "lbName": "myIPv4IPv6LB",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbName'))]",
    "ipv4FrontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEndIPv4')]",
    "ipv6FrontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEndIPv6')]",
    "ipv4LbBackendPoolID": "[concat(variables('lbID'),'/backendAddressPools/BackendPoolIPv4')]",
    "ipv6LbBackendPoolID": "[concat(variables('lbID'),'/backendAddressPools/BackendPoolIPv6')]",
    "ipv4ipv6lbProbeName": "tcpProbeIPv4IPv6",
    "ipv4ipv6lbProbeID": "[concat(variables('lbID'),'/probes/', variables('ipv4ipv6lbProbeName'))]",
    "ipv6mgmtvmImagePublisher": "MicrosoftWindowsServer",
    "ipv6mgmtvmImageOffer": "WindowsServer",
    "ipv6mgmtvmVmSize": "Standard_D1",
    "ipv6mgmtvmNicName": "[concat(parameters('ipv6mgmtvmName'), 'NetworkInterface')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "Standard_RAGRS"
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": { }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('ipv4PublicIPAddressName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "[variables('ipv4PublicIPAddressType')]"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "mgmtip",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "[variables('ipv4PublicIPAddressType')]"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('ipv6PublicIPAddressName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAddressVersion": "IPv6",
        "publicIPAllocationMethod": "[variables('ipv6PublicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameforIPv6')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicNamePrefix'), copyindex())]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "properties": {
        "enableIPForwarding": true,
        "ipConfigurations": [
          {
            "name": "ipv4IPConfig",
            "properties": {
              "privateIPAddressVersion": "IPv4",
              "privateIPAllocationMethod": "[variables('ipv4PrivateIPAddressType')]",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnetName'), variables('subnetName'))]"
              }
            }
          },
          {
            "name": "ipv6IPConfig",
            "properties": {
              "privateIPAddressVersion": "IPv6",
              "privateIPAllocationMethod": "[variables('ipv6PrivateIPAddressType')]",
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('ipv6LbBackendPoolID')]"
                }
              ],

              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('lbID'),'/inboundNatRules/SSH-VM', copyindex())]"
                }
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('lbName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('lbName')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEndIPv4",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('ipv4PublicIPAddressName'))]"
              }
            }
          },
          {
            "name": "LoadBalancerFrontEndIPv6",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('ipv6PublicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPoolIPv4"
          },
          {
            "name": "BackendPoolIPv6"
          }
        ],
        "inboundNatRules": [
          {
            "name": "SSH-VM0",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('ipv6FrontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 50000,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          },
          {
            "name": "SSH-VM1",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('ipv6FrontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 50001,
              "backendPort": 22,
              "enableFloatingIP": false
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "LBRuleIPv4",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('ipv4FrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('ipv4LbBackendPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 8080,
              "backendPort": 8080,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('ipv4ipv6lbProbeID')]"
              }
            }
          },
          {
            "name": "LBRuleIPv6",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('ipv6FrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('ipv6LbBackendPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "probe": {
                "id": "[variables('ipv4ipv6lbProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('ipv4ipv6lbProbeName')]",
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('ipv4PublicIPAddressName'))]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('ipv6PublicIPAddressName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmNamePrefix'), copyindex())]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "Standard_DS1_v2"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmNamePrefix'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "OpenLogic",
            "offer": "CentOS",
            "sku": "7.2",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob, 'vhds/osdisk', copyIndex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicNamePrefix'),copyindex()))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicNamePrefix'), copyindex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ]
    },
    {
      "name": "[variables('ipv6mgmtvmNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
      ],
      "tags": {
        "displayName": "ipv6mgmtvmNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'mgmtip')]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnetName'), variables('subnetName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('ipv6mgmtvmName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('ipv6mgmtvmNicName'))]"
      ],
      "tags": {
        "displayName": "ipv6mgmtvm"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('ipv6mgmtvmVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('ipv6mgmtvmName')]",
          "adminUsername": "[parameters('AdminUsername')]",
          "adminPassword": "[parameters('AdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('ipv6mgmtvmImagePublisher')]",
            "offer": "[variables('ipv6mgmtvmImageOffer')]",
            "sku": "[parameters('ipv6mgmtvmWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "ipv6mgmtvmOSDisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2015-06-15').primaryEndpoints.blob, 'vhds/osdiskipv6mgmtvmOSDisk', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('ipv6mgmtvmNicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmNamePrefix'), copyIndex(),'/','linuxipv6config')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "copy": {
        "name": "vmExtenstionLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmNamePrefix'), copyIndex())]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/Teodelas/azure-lab/master/linuxipv6config.sh"
          ],
          "commandToExecute": "sh linuxipv6config.sh"
        }
      }
    }
  ]
}
