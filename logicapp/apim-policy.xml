<policies>\r\n  <inbound>\r\n    <set-variable name=\"upn\" value=\"@(context.Request.Headers.GetValueOrDefault(&quot;Authorization&quot;,&quot;&quot;).Replace(&quot;Bearer &quot;, &quot;&quot;).AsJwt()?.Claims[&quot;upn&quot;][0])\" />\r\n    <validate-jwt header-name=\"Authorization\" failed-validation-httpcode=\"401\" failed-validation-error-message=\"Unauthorized. Access token is missing or invalid.  :-(\">\r\n      <openid-config url=\"https://login.microsoftonline.com/72f988bf-86f1-41af-91ab-2d7cd011db47/.well-known/openid-configuration\" />\r\n      <required-claims>\r\n        <claim name=\"upn\" match=\"all\">\r\n          <value>teodelas@microsoft.com</value>\r\n        </claim>\r\n      </required-claims>\r\n    </validate-jwt>\r\n    <set-header name=\"X-UPN\" exists-action=\"override\">\r\n      <value>@((string)context.Variables[\"upn\"])</value>\r\n    </set-header>\r\n    <set-header name=\"Authorization\" exists-action=\"delete\" />\r\n    <set-body>@{ \r\n            JObject response = context.Request.Body.As&lt;JObject&gt;(); \r\n            response.Add(\"id\",\"f71dc6148f05407ab42d5471dc1a50f8\");\r\n            return response.ToString(Newtonsoft.Json.Formatting.None); \r\n        }</set-body>\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>
